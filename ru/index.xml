<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EP says hi on EP says hi</title>
    <link>https://epogrebnyak.github.io/ru/</link>
    <description>Recent content in EP says hi on EP says hi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <copyright>&amp;copy; Evgeniy Pogrebnyak</copyright>
    <lastBuildDate>Fri, 15 Mar 2019 10:57:57 +0300</lastBuildDate>
    <atom:link href="/ru/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Начать (и успешно продолжить) программировать на Python</title>
      <link>https://epogrebnyak.github.io/ru/post/2019-03-16-start-python/</link>
      <pubDate>Fri, 15 Mar 2019 10:57:57 +0300</pubDate>
      
      <guid>https://epogrebnyak.github.io/ru/post/2019-03-16-start-python/</guid>
      <description>

&lt;h2 id=&#34;c-чего-начать&#34;&gt;C чего начать?&lt;/h2&gt;

&lt;p&gt;Если нужен короткий ответ - &lt;a href=&#34;https://github.com/trekhleb/learn-python&#34; target=&#34;_blank&#34;&gt;learn-python О.Твердохлеба&lt;/a&gt;. Лучше всего подойдет тем, кто когда-то начинал программировать (например, Basic, Pascal или VBA) и хочет восстановить и развить навыки.&lt;/p&gt;

&lt;p&gt;Также хорошие введения есть на сайте &lt;a href=&#34;https://lectures.quantecon.org/py/index_learning_python.html&#34; target=&#34;_blank&#34;&gt;QuantEcon&lt;/a&gt; (эта часть
именно про Python, легко доступна для неэкономистов)
и в &lt;a href=&#34;http://scipy-lectures.org/intro/language/python_language.html&#34; target=&#34;_blank&#34;&gt;лекциях по SciPy&lt;/a&gt;.
Обе главы написаны очень хорошо, но все материалы на английском.&lt;/p&gt;

&lt;p&gt;Продублирую еще раз списком:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trekhleb/learn-python&#34; target=&#34;_blank&#34;&gt;trekhleb/learn-python&lt;/a&gt; - все, что надо знать о синтаксисе языка удобно сгруппировано и проиллюстрировано примерами&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lectures.quantecon.org/py/index_learning_python.html&#34; target=&#34;_blank&#34;&gt;QuantEcon&lt;/a&gt; - начальная глава
более сложного учебника.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scipy-lectures.org/intro/language/python_language.html&#34; target=&#34;_blank&#34;&gt;лекция из SciPy&lt;/a&gt; - аналогично,
начальная глава более полного курса&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Есть нужна именно книга, то очень живым проектом выглядит &lt;a href=&#34;https://docs.python-guide.org&#34; target=&#34;_blank&#34;&gt;The Hitchhiker’s Guide to Python&lt;/a&gt;, рекомендуется, выложена в сети. Сильная сторна - сразу переходят
к приложениям и библиотекам, но это и требует подготовки читателя.&lt;/p&gt;

&lt;p&gt;Также раньше часто рекомендовали &lt;a href=&#34;https://learnpythonthehardway.org/python3/&#34; target=&#34;_blank&#34;&gt;Zed Shaw. Learn Python the Hard Way&lt;/a&gt; и &lt;a href=&#34;https://www.diveinto.org/python3&#34; target=&#34;_blank&#34;&gt;Mark Pilgrim. Dive into Python&lt;/a&gt;, они доступны онлайн. Learn Python the Hard Way
активно обновляется, Dive into Python застыл на версии 2011 года. Учить язык по ним
бы не стал, но как сборник упражений - отличный вариант.&lt;/p&gt;

&lt;h2 id=&#34;план-изучения&#34;&gt;План изучения&lt;/h2&gt;

&lt;p&gt;Я выписал шаги между самым первым запуском интерпретатора
и далекими, непонятными, темными сторонами языка, которые выявляются
после длительного изучения:&lt;/p&gt;

&lt;h3 id=&#34;1-где-живет-программа&#34;&gt;1. Где живет программа.&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;nbsp;&lt;/th&gt;
&lt;th&gt;Установить Python&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Идея&lt;/td&gt;
&lt;td&gt;&lt;code&gt;python.exe&lt;/code&gt; это исполняемый файл где-то в файловой системе&lt;BR&gt; Он запускается с аргументами  и опциями.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1 строка&lt;/td&gt;
&lt;td&gt;&lt;code&gt;python --version&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Сложности&lt;/td&gt;
&lt;td&gt;Переменная PATH, конфликты версий&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Откуда&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip; установаить? &lt;a href=&#34;https://www.anaconda.com/distribution&#34; target=&#34;_blank&#34;&gt;https://www.anaconda.com/distribution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;nbsp;&lt;/th&gt;
&lt;th&gt;REPL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Идея&lt;/td&gt;
&lt;td&gt;Программа это текстовый файл, интепретатор это цикл.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1 строка&lt;/td&gt;
&lt;td&gt;&lt;code&gt;print (&#39;Hello, world!&#39;)&lt;/code&gt;, &lt;code&gt;python -c &amp;quot;print(&#39;Hello, world!&#39;)&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Сложности&lt;/td&gt;
&lt;td&gt;IDE - это не сам Python.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;2-основная-часть-синтаксиса-и-логики-языка&#34;&gt;2. Основная часть синтаксиса и логики языка.&lt;/h3&gt;

&lt;h4 id=&#34;2-1-выражения-и-операторы-переменные&#34;&gt;2.1. Выражения и операторы. Переменные.&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Интерпретатор может поработать калькулятором.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt; 1 + 3 * (10 - 2)
25
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-2-типы-и-структуры-данных&#34;&gt;2.2.  Типы и структуры данных.&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Числа и строки разные вещи.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt; isinstance(&amp;quot;abc&amp;quot;, str) &amp;amp; isinstance(1, int)
True
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Списки и словари (containers) полезны .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt; colors = [&#39;red&#39;, &#39;blue&#39;, &#39;green&#39;, &#39;black&#39;, &#39;white&#39;]
&amp;gt;&amp;gt; colors[0]
&amp;quot;red&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt; {1:&amp;quot;I&amp;quot;, 2:&amp;quot;II&amp;quot;, 3:&amp;quot;III&amp;quot;, 4:&amp;quot;IV&amp;quot;, 5:&amp;quot;V&amp;quot;}[4]
&amp;quot;IV&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-3-функции-стандартная-библиотека&#34;&gt;2.3. Функции. Стандартная библиотека.&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Вычисления и операции можно сгруппировать.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import math     
def roots(a, b, c):
    &amp;quot;&amp;quot;&amp;quot;Quadratic equation roots.&amp;quot;&amp;quot;&amp;quot;
    d = b**2-4*a*c 
    try: 
        r = math.sqrt(d)
    except ValueError:
        raise ValueError(&amp;quot;Cannot calculate real roots&amp;quot;)        
    x1 = (-b + r) / (2 * a)
    x2 = (-b - r) / (2 * a)
    return x1, x2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt; min (5, 7)
5
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-условное-исполнение-if-then-else-цикл-for&#34;&gt;2.4. Условное исполнение &lt;code&gt;if-then-else&lt;/code&gt;. Цикл &lt;code&gt;for&lt;/code&gt;.&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Исполнение программы может куда-то перескаивать.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for x in [1,2,3,4]: 
    if (x % 2) == 0:
        print(x, &amp;quot;is even.&amp;quot;)
    else:
        s = &amp;quot;odd&amp;quot;
        print(x, &amp;quot;is odd.&amp;quot;)    
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-5-все-остальное-а-чем-учат-в-базовых-курсах&#34;&gt;2.5. Все остальное, а чем учат в базовых курсах.&lt;/h4&gt;

&lt;p&gt;В этом месте наметился перелом данной статьи. Оказалось,
что в пп. 2.1.-2.3 сложно описать минимальную версию
языка программирования. За бортом остаются:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;скрипты, модули, пакеты&lt;/li&gt;
&lt;li&gt;дебаггер, логирование&lt;/li&gt;
&lt;li&gt;генераторы, итераторы, распаковка (list comprehension)&lt;/li&gt;
&lt;li&gt;ввод-вывод&lt;/li&gt;
&lt;li&gt;классы&lt;/li&gt;
&lt;li&gt;много что другого&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Тем не менее, повторю еще раз ссылки на базовые курсы:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trekhleb/learn-python&#34; target=&#34;_blank&#34;&gt;trekhleb/learn-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lectures.quantecon.org/py/index_learning_python.html&#34; target=&#34;_blank&#34;&gt;лекции QuantEcon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scipy-lectures.org/intro/language/python_language.html&#34; target=&#34;_blank&#34;&gt;лекции SciPy&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;В них все есть! (Идея: генерировать таблицу &lt;code&gt;&amp;lt;подтема&amp;gt;-&amp;lt;разделы разных учебников&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&#34;3-дальнейшие-важные-пункты&#34;&gt;3. Дальнейшие важные пункты&lt;/h4&gt;

&lt;p&gt;Ниже чеклист продвинутых тем, которые так или иначе возникают при изучении и использовании
языка.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Обзор языка:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import keyword; keyword.kwlist&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/python?sort=votes&#34; target=&#34;_blank&#34;&gt;StackOverflow&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Среды разработки (IDE):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;просто текстовый редактор (vim)&lt;/li&gt;
&lt;li&gt;IDLE, VSCode, Pycharm&lt;/li&gt;
&lt;li&gt;Jupyter&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Менеджеры пакетов, структура и упаковка проектов:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;requiements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipenv&lt;/code&gt;, pipfile&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conda&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;poetry&lt;/code&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Аннотирование:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;docstrings и &lt;code&gt;PEP8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autopep8&lt;/code&gt;, &lt;code&gt;black&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sphinx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;ldquo;Идиоматический&amp;rdquo; питон&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Регулярные выражения и форматы.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://regex101.com&#34; target=&#34;_blank&#34;&gt;regex101.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pyformat.info&#34; target=&#34;_blank&#34;&gt;pyformat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://strftime.org/&#34; target=&#34;_blank&#34;&gt;форматы даты и времени&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ввыод-вывод (IO):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;files: &lt;code&gt;pathlib&lt;/code&gt;, &lt;code&gt;csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CLI: &lt;code&gt;sys.args&lt;/code&gt;, &lt;a href=&#34;http://docopt.org/&#34; target=&#34;_blank&#34;&gt;docopt&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Databases, SQL:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dataset.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34;&gt;dataset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Web:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flask&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Тесты и TDD:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assert&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unittest&lt;/code&gt;, &lt;code&gt;pytest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;dependency injection&lt;/li&gt;
&lt;li&gt;continious inegration
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Объектно-ориентированное программирование (ООП):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Everything is an object&amp;rdquo;, &lt;code&gt;id()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;, cat vs dog&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/abc.html&#34; target=&#34;_blank&#34;&gt;ABCs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Алгоритмы:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/Python&#34; target=&#34;_blank&#34;&gt;сортировки&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;O-notation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/faif/python-patterns&#34; target=&#34;_blank&#34;&gt;Design patterns&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Productivity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;command line&lt;/li&gt;
&lt;li&gt;editor shortcuts&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;markdown&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Вне описания:
    - pandas
    - matplotlib
    - сравнение python с R и другими языками
    - type hints&lt;/p&gt;

&lt;p&gt;Буду признателен, если расскажете, какие вехи были у вас в изучении python
(или других областей программирования) - как кратко очаратеризовать этот этап и
что за ним стоит, что было или остается сложным, возможно - ссылки по теме.&lt;/p&gt;

&lt;h2 id=&#34;педагогика-какая-то-в-этом-есть&#34;&gt;Педагогика какая-то в этом есть?&lt;/h2&gt;

&lt;p&gt;Мне кажется, основная проблема в обучении программированию - не упрощение или переупаковка материала,
а поддержание мотивации обучающихся.&lt;/p&gt;

&lt;p&gt;Хорошо известно, что идеально обучение с конкретными примерами, задачами близкими
к сфере знаний пользователя, кейсы и так далее. Проблема с этими материалами - как с курицей и яйцом: пока навыков мало освоить сложный пример нельзя, а простые примеры редко цепляют подлинный интерес и поддерживают мотивацию (тут хочется ошибаться).&lt;/p&gt;

&lt;p&gt;Выход из этого круга либо &amp;ldquo;сверху&amp;rdquo; (показать как работает итоговая программа и разобраться в начинке - пример fast.ai), &amp;ldquo;сбоку&amp;rdquo; (программы поменьше и разбор быстрее, Learn Python the Hard Way) или &amp;ldquo;снизу&amp;rdquo; (все-таки запастись терпением на долгую подготовку, Norwig).&lt;/p&gt;

&lt;p&gt;Пара ссылок на тему &amp;ldquo;а как учить?&amp;rdquo;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1006023&#34; target=&#34;_blank&#34;&gt;Ten quick tips for teaching programming (2018)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/learnprogramming/comments/5zc24o/the_best_way_to_learn_how_to_code/&#34; target=&#34;_blank&#34;&gt;The Best Way To Learn How To Code (3 правила)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://norvig.com/21-days.html&#34; target=&#34;_blank&#34;&gt;П.Норвиг. Научитесь программировать за 10 лет&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://worrydream.com/LearnableProgramming/&#34; target=&#34;_blank&#34;&gt;Требования к языку программирования и среде обучения&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;учить-не-python-а-computer-science&#34;&gt;Учить не Python, а computer science&lt;/h2&gt;

&lt;p&gt;Почти классика:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://interactivepython.org/courselib/static/thinkcspy/index.html&#34; target=&#34;_blank&#34;&gt;http://interactivepython.org/courselib/static/thinkcspy/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Больше хардкора:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://teachyourselfcs.com/&#34; target=&#34;_blank&#34;&gt;https://teachyourselfcs.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ossu/computer-science&#34; target=&#34;_blank&#34;&gt;https://github.com/ossu/computer-science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer&#34; target=&#34;_blank&#34;&gt;https://github.com/donnemartin/system-design-primer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;а-как-же-courser-a&#34;&gt;А как же Courser&amp;rsquo;a&lt;/h2&gt;

&lt;p&gt;Почему бы не попробовать, но есть риски:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Using online tutorials is like trying to learn how to cook by stabbing at random buttons on an unlabeled microwave.&amp;rdquo; &lt;a href=&#34;https://www.technologyreview.com/s/429438/dear-everyone-teaching-programming-youre-doing-it-wrong/&#34; target=&#34;_blank&#34;&gt;A blog in 2012&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Этот datacamp&amp;hellip; Он по-моему ничему вообще не учит.&amp;rdquo; От знакомого, 2019.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;куда-за-мотивацией&#34;&gt;Куда за мотивацией?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Github покажет какие проекты активно развиваются:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/topics/python&#34; target=&#34;_blank&#34;&gt;topics/python&lt;/a&gt; - популярные за все время&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trending/python&#34; target=&#34;_blank&#34;&gt;trending/python&lt;/a&gt; - последние тренды&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Вкратце ситуацию можно &lt;a href=&#34;https://stackoverflow.com/users/1758363/epo?tab=profile&#34; target=&#34;_blank&#34;&gt;изложить так&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;используем &lt;code&gt;requests&lt;/code&gt;/&lt;code&gt;scrapy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;чтобы загрузить в &lt;code&gt;pandas&lt;/code&gt; данные c сайтов на  &lt;code&gt;flask&lt;/code&gt;/&lt;code&gt;django&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;и поработать с ними в &lt;code&gt;tensorflow&lt;/code&gt;/&lt;code&gt;keras&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;на машинах под управлением &lt;code&gt;ansible&lt;/code&gt;/&lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;временами изучая &lt;code&gt;awesome-python&lt;/code&gt;/&lt;code&gt;system-design-primer&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Со звездами Github есть проблема в том, что базовые инфраструктурные библиотеки
(например, проекты NumFOCUS) не получают так уж много звезд, потому что все считают из
за данность.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/research/python-developers-survey-2018&#34; target=&#34;_blank&#34;&gt;Python developers survey 2018&lt;/a&gt; рассказывает о том, что на самом деле пилят питонисты, но опять таки - с их слов.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Много небольших проектов под Python в &lt;a href=&#34;https://github.com/danistefanovic/build-your-own-x&#34; target=&#34;_blank&#34;&gt;build-your-own-x&lt;/a&gt;: от блокчейна до инетпретатора Lisp до своей маленькой операционной системы. Пока что-нибудь сам не &lt;del&gt;сломаешь&lt;/del&gt; сделаешь - не разберешься.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;На &lt;a href=&#34;http://euler.jakumo.org/problems.html&#34; target=&#34;_blank&#34;&gt;проекте Эйлер&lt;/a&gt; много математических задач.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
