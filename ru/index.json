[{"authors":["admin"],"categories":null,"content":"Весь сайт в начальной стадии наполнения, буквально один-два поста.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"ru","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://epogrebnyak.github.io/ru/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ru/authors/admin/","section":"author","summary":"Весь сайт в начальной стадии наполнения, буквально один-два поста.","tags":null,"title":"Евгений Погребняк","type":"author"},{"authors":null,"categories":["programming","data-but-not-rocket-science"],"content":"  Using (\u0026hellip;) online tutorials is like trying to learn how to cook by stabbing at random buttons on an unlabeled microwave.\n 2012\nC чего начать программировать на Питоне? Если нужен короткий ответ - вседа рекомендую learn-python О.Твердохлеба. Лучше всего подойдет тем, кто когда-то начинал программировать (Basic, Pascal, VBA) и хочет восстановить навык.\nТакже хорошие введения есть на сайте QuantEcon (подйдет не только экономистам) и в лекциях по SciPy. Обе главы по введению в Python написаны очень хорошо, доступно, детально.\nПродублирую еще раз списком (все на английском):\n https://github.com/trekhleb/learn-python - все, что надо знать о синтаксисе языка удобно сгруппировано и проиллюстрировано примерами. https://lectures.quantecon.org/py/index_learning_python.html - начальная глава более сложного учебника http://scipy-lectures.org/intro/language/python_language.html - аналогично   Для более подробного погружения я собрал ссылки на best practices, книги и некоторые видео.\nПлан изучения Я выписал шаги между самым первым запуском интерпретатора и далекими, непонятными, темными сторонами языка, которые выявляются после длительного изучения:\n\u0026mdash;\u0026mdash;\u0026mdash;-|\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash; |\n\u0026mdash;\u0026mdash;\u0026mdash;-|\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash; Задача | Установить Python Идея | Сам python.exe это исполняемый файл 1 строка | python --version Сложности | переменная PATH, конфликты версий\n python --version print ('Hello, world!') python -c \u0026quot;print('Hello, world!')\u0026quot; \u0026hellip; PEP8 \u0026hellip; проекты на github (topics/python, trending/python) интересные ответы на StackOverflow \u0026hellip; тесты (assert, unittest, pytest, TDD) \u0026hellip; алгоритмы и O-notation \u0026hellip; docopt dataset \u0026hellip; docstrings, документация, sphinx \u0026hellip; design patterns \u0026hellip; ABCs \u0026hellip;  Буду признателен, если расскажете, какие вехи были у вас в изучении python (или других обалстей программирования) - как кратко назвать этот этап и что за ним стоит, что было или остается сложным, полюбившиеся ссылки по теме.\nПедагогика какая-то в этом есть? Мне кажется, основная проблема в обучении программированию - не упрощение или переупаковка материала, а поддержание мотивации обучающихся.\nХорошо известно, что идеально обучение с конкретными примерами, задачами близкими к сфере знаний пользователя, кейсы и так далее. Проблема с этими материалами - как с курицей и яйцом: пока навыков мало освоить сложный пример нельзя, а простые примеры редко цепляют подлинный интерес и поддерживают мотивацию (тут хочется ошибаться).\nВыход из этого круга либо \u0026ldquo;сверху\u0026rdquo; (показать как работает итоговая программа и разобраться в начинке - пример fast.ai), \u0026ldquo;сбоку\u0026rdquo; (программы поменьше и разбор быстрее, Learn Python the Hard Way) или \u0026ldquo;снизу\u0026rdquo; (все-таки запастись терпением на долгую подготовку, Norwig).\nПара ссылок на тему \u0026ldquo;а как учить?\u0026rdquo;:\n Ten quick tips for teaching programming (2018) The Best Way To Learn How To Code (3 правила) П.Норвиг. Научитесь программировать за 10 лет Требования к языку программирования и среде обучения  Не Python, а computer science Почти классика:\n http://interactivepython.org/courselib/static/thinkcspy/index.html  Больше хардкора:\n https://teachyourselfcs.com/ https://github.com/ossu/computer-science https://github.com/donnemartin/system-design-primer  ","date":1552636677,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1552636677,"objectID":"ae7561936e7b209da06a5918fe34fdbe","permalink":"https://epogrebnyak.github.io/ru/post/2019-03-16-start-python/","publishdate":"2019-03-15T10:57:57+03:00","relpermalink":"/ru/post/2019-03-16-start-python/","section":"post","summary":"Using (\u0026hellip;) online tutorials is like trying to learn how to cook by stabbing at random buttons on an unlabeled microwave.\n 2012\nC чего начать программировать на Питоне? Если нужен короткий ответ - вседа рекомендую learn-python О.Твердохлеба. Лучше всего подойдет тем, кто когда-то начинал программировать (Basic, Pascal, VBA) и хочет восстановить навык.\nТакже хорошие введения есть на сайте QuantEcon (подйдет не только экономистам) и в лекциях по SciPy.","tags":["python","clean code"],"title":"Начать (и успешно продолжить) программировать на Python","type":"post"}]