[{"authors":["admin"],"categories":null,"content":"This page is in pre-release stage. So far I managed to put is some credentials and one post about the setup process, which is rather exciting and creative with Hugo and Academic theme. More to come!\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://epogrebnyak.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"This page is in pre-release stage. So far I managed to put is some credentials and one post about the setup process, which is rather exciting and creative with Hugo and Academic theme. More to come!","tags":null,"title":"Evgeniy Pogrebnyak","type":"author"},{"authors":null,"categories":[],"content":"DEV.to article \u0026ldquo;Julia, surprise me!\u0026rdquo; maps my learning of the Julia programming language as a series of pleasant and less satisfying surprises.\nSince then my biggest roadblock to Julia was the recompilation time of the dependencies.\nNot much fun seeing your code execute in milliseconds, if you have to wait a minute for a dependency to \u0026lsquo;precompile\u0026rsquo;. Repeating that in cylces each time you run a test is not good.\njulia\u0026gt; @time using LessOLS [ Info: Precompiling LessOLS [3e4c6e70-f926-11e8-0fa5-39915c5a2b72] 57.375232 seconds (2.92 M allocations: 159.585 MiB, 0.20% gc time)  The issue is addressed by the Julia community, and may possibly be fixed by Revise.jl drop in.\nMy primary project with Julia is LessOLS.jl, a from-scratch excercise in econometrics.\n","date":1552897436,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552897436,"objectID":"99dd9d434f9c6502f17ec1e8e3b45989","permalink":"https://epogrebnyak.github.io/post/2019-03-18-julia-language-intro/","publishdate":"2019-03-18T11:23:56+03:00","relpermalink":"/post/2019-03-18-julia-language-intro/","section":"post","summary":"DEV.to article \u0026ldquo;Julia, surprise me!\u0026rdquo; maps my learning of the Julia programming language as a series of pleasant and less satisfying surprises.\nSince then my biggest roadblock to Julia was the recompilation time of the dependencies.\nNot much fun seeing your code execute in milliseconds, if you have to wait a minute for a dependency to \u0026lsquo;precompile\u0026rsquo;. Repeating that in cylces each time you run a test is not good.","tags":["julia","programming","econometrics"],"title":"Julia Programming Language Introduction","type":"post"},{"authors":null,"categories":[],"content":" Academic theme is great, well-thought in design and popular with users. Below is a track record of my site setup using Hugo and Academic.\nPrecursor I\u0026rsquo;m migrating from a Jekyll-based CV theme to Academic. CV had a clean look and helped me to sort out my personal information, but it was not easily extensible. I did set it up once on Github Pages and rarely updated.\nAs for site generators in general, Jekyll still looks a bit more popular than Hugo based on Github stars, but I like Hugo better, because of the following:\n definitive separation of content and presentation a bit less blog-oriented (more themes to build non-blog sites) supplied as a binary, not a library (you do not need Golang installation for Hugo, but you are using Ruby environment for Jekyll) finally, because it has Academic theme.  My setup Some steps in my site setup I have spent a bit extra time with:\n contacts section configuration explained in Leslie Myint blog post added StackOverflow fas icon (had to look up a font library, can be provided by default) contact form by https://formspree.io will need activation (both on localhost and your server) added personal photo as avatar.png (from the layout code it appears that file extension does not matter) replaced favicon as suggested in docs  I disabled the following sections:\n people and groups - probably good for another, more collaborative site publications, featured (duplicated, not filled yet) skills (great look, had it in Jekyll CV, but how do you access + must move off the front page) accomplishments (must put a list of econometrics courses in) talks (would be nice to recollect!) experience (to fill later, was not filled in a CV) hero widget  Also moved several files (including .sh) to ignore folder - cleans root of the repository.\nIs blog a relic? I first disabled the blog too. I thought of blogging as such an archaic activity, but now I see it as a form of notetaking and knowledge management. And the best way of managing some internal knowledge is:\nThe most effective way to share knowledge within your organization is to share it with the whole world\n\u0026mdash; Chris Whong (@chris_whong) March 14, 2019 \nWhy filtering? Also is Academic documentation web site blocking traffic from Russia? A provider thing or site configuration? Had to use a proxy to access it, but the proxy also interferes with localhost - rather messy.\nUPDATE: blocking no more as of 16-03-2019. Maybe a coffee helped.\nGratitude I paid up for a coffee to Academic on paypal. A small gratitude to an open source project.\n","date":1552636677,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552636677,"objectID":"25ff99d2d90641e6773db11166e05ab2","permalink":"https://epogrebnyak.github.io/post/2019-03-15-setting-up-academic/","publishdate":"2019-03-15T10:57:57+03:00","relpermalink":"/post/2019-03-15-setting-up-academic/","section":"post","summary":"Academic theme is great, well-thought in design and popular with users. Below is a track record of my site setup using Hugo and Academic.\nPrecursor I\u0026rsquo;m migrating from a Jekyll-based CV theme to Academic. CV had a clean look and helped me to sort out my personal information, but it was not easily extensible. I did set it up once on Github Pages and rarely updated.\nAs for site generators in general, Jekyll still looks a bit more popular than Hugo based on Github stars, but I like Hugo better, because of the following:","tags":["hugo","setup"],"title":"Setting Up Academic Theme","type":"post"},{"authors":null,"categories":null,"content":"","date":1538514000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538514000,"objectID":"b748e73d9d64f1b82b9be6f7d2e126df","permalink":"https://epogrebnyak.github.io/project/haskell/","publishdate":"2018-10-03T00:00:00+03:00","relpermalink":"/project/haskell/","section":"project","summary":"Curated Haskell classes taught by Yuras Shumovich.","tags":["programming","haskell"],"title":"Introduction to Haskell","type":"project"},{"authors":null,"categories":null,"content":"","date":1511730000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1511730000,"objectID":"6f11152f9c8cf594c682f404be8a0199","permalink":"https://epogrebnyak.github.io/project/mini-kep/","publishdate":"2017-11-27T00:00:00+03:00","relpermalink":"/project/mini-kep/","section":"project","summary":"A public API that delivers Russian macroeconomic time series in St Louis FRED style.","tags":["time series","macroeconomics","econometrics"],"title":"mini-kep Dataset","type":"project"},{"authors":null,"categories":null,"content":" Userful tools and concepts https://epogrebnyak.github.io/slides/tools/\n1. Command line If on Windows, install WSL.\nGo through Art of command line.\nTasks  Fluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility and productivity as an engineer in both obvious and subtle ways.\n More at Art of command line.\nConcepts  file system (~ or %USERPROFILE%, PATH) streams and redirection (\u0026gt;, \u0026gt;\u0026gt;, |) args and flags (docopt) package managers (apt-get)  Running on Windows  GOW Cygwin, MinGW Git for Windows cmder  Windows Subsystem for Linux (WSL)  Video: WSL architecture\nRemote machine Google Colab is a free and fast way to play with command line on a remote machine.\nExample apt-get tree man tree tree / -d -L 2  Why not try this in ​Google Colab? Prefix every command with !\nCloud\u0026hellip; \n\u0026hellip; or just someone else\u0026rsquo;s computer?   \u0026quot;Would you put your files on someone else\u0026#39;s computer?\u0026quot;\n\u0026quot;Lol no\u0026quot;\n\u0026quot;Would you put your files in the cloud though?\u0026quot;\n\u0026quot;That sounds lovely, I love clouds\u0026quot;\n\u0026mdash; ᴠᴀɴ sᴄʜɴᴇɪᴅᴇʀ (@vanschneider) August 13, 2018 \n(Temp) free plans All have (temporarily) free plans:\r  AWS EC2 Digital Ocean Yandex and Mail.ru  Tip: Travis-CI artifacts\nOn mobile Termux (Android)\nTest-driven development (TDD) Unit test, end-to-end tests and dirty hybrids  UnitTest pytest  Continious integration  Travis CI Circle CI  Test coverage Git  Use Concept Workflow Work in small batches.\n Where:\n Github Gitlab   Data  Analysis is a DAG Data storage (AWS S3)  Publishing  markdown, pandoc asciidoctor (Ruby) latex (Overleaf) doi, bibliography jekyll, hugo  Обеспечения надзора\n Руководитель экспертной группы Полонский  Coding Tweet: coding interview\nConcepts:\n OOP vs FP algorithm, O(n) notation Turing / state machine  Use:\n REPL + text editor databases: ORM, SQL regex  Learn from:\n SO dev.to library popularity on github  Editors (vs IDEs)  :q for vim VSCode Sublime Notepad++  Productivity  todo.txt todos, try, doing, done file naming  Как вообще мы вызываем функцию?  f(5,6) - \u0026quot;The ideal syntax for practical programmers\u0026quot;\nf 5 6 - \u0026quot;Bizarre; only academics would use\u0026quot;\n(f 5 6) - \u0026quot;Too many parentheses\u0026quot;\n5.f(6) - \u0026quot;Preferred for your next web app\u0026quot;\n\u0026mdash; Michael Burge (@TheMichaelBurge) November 4, 2018\n \ndata-width=550\nA summary of  https://github.com/epogrebnyak/notes-linux-cli for WSL https://github.com/epogrebnyak/learn for coding https://github.com/epogrebnyak/notes-pandoc https://github.com/epogrebnyak/notes-slides  Built with:\n markdown Hugo reveal.js Twitter search  Tried: - gitpitch.com\nMay try: - npm reveal-md\nAdd Some Slide Candy @title[Customize Slide Layout]\n@snap[west span-50]\nCustomize Slide Content Layout @snapend\n@snap[east span-50] @snapend\n\u0026mdash;?color=#E58537 @title[Add A Little Imagination]\n@snap[north-west]\nAdd a splash of @colorcyan and you are ready to start presenting\u0026hellip; @snapend\n@snap[west span-55] @ul[spaced text-white] - You will be amazed - What you can achieve - With a little imagination\u0026hellip; - And GitPitch Markdown @ulend @snapend\n@snap[east span-45] @imgshadow @snapend\n\u0026mdash;?image=assets/img/presenter.jpg\n@snap[north span-100 headline]\nNow It\u0026rsquo;s Your Turn @snapend\n@snap[south span-100 text-06] Click here to jump straight into the interactive feature guides in the GitPitch Docs @fa[external-link] @snapend\nWelcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne\r Two\r Three\r\nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d1c94cf40d38cd9ae25d6c840b72ba8e","permalink":"https://epogrebnyak.github.io/slides/tools/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/tools/","section":"slides","summary":"Userful tools and concepts https://epogrebnyak.github.io/slides/tools/\n1. Command line If on Windows, install WSL.\nGo through Art of command line.\nTasks  Fluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility and productivity as an engineer in both obvious and subtle ways.\n More at Art of command line.\nConcepts  file system (~ or %USERPROFILE%, PATH) streams and redirection (\u0026gt;, \u0026gt;\u0026gt;, |) args and flags (docopt) package managers (apt-get)  Running on Windows  GOW Cygwin, MinGW Git for Windows cmder  Windows Subsystem for Linux (WSL)  Video: WSL architecture","tags":null,"title":"Slides","type":"slides"}]